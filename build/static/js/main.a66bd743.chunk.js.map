{"version":3,"sources":["reducers/notificationReducers.js","constants/notificationConstants.js","store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderConstants.js","components/Notification.js","actions/userActions.js","components/SearchBox.js","components/Header.js","actions/notificationActions.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","actions/cartActions.js","screens/ProductScreen.js","screens/ProductListScreen.js","components/FormContainer.js","screens/ProductEditScreen.js","screens/CartScreen.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/OrderListScreen.js","App.js","index.js"],"names":["notificationReducer","state","showAdded","showAlready","showLogout","showDeleted","action","type","reducer","combineReducers","notification","productList","products","loading","payload","pages","page","error","productDetails","product","review","productDelete","success","productCreate","productUpdate","productCreateReview","productTopRated","cart","cartItems","shipping","item","existItem","find","x","map","filter","shippingAddress","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderSent","orderDeliver","userList","users","userDelete","userUpdate","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Notification","show","color","message","useState","setNotification","Row","Col","xs","ToastContainer","position","style","marginRight","marginBottom","zIndex","Toast","onClose","delay","autohide","bg","Header","closeButton","className","Body","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","SearchBox","keyword","setKeyword","navigate","useNavigate","Form","onSubmit","e","preventDefault","trim","Control","name","placeholder","marginLeft","onChange","target","value","Button","variant","badgeStyle","display","justifyContent","width","fontWeight","top","left","opacity","useDispatch","useSelector","Navbar","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","length","Badge","pill","fontSize","NavDropdown","title","Item","onClick","removeItem","setTimeout","console","log","href","isAdmin","Footer","Rating","text","defaultProps","Product","Card","_id","Img","src","image","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","height","margin","Message","children","Alert","Paginate","Pagination","Array","keys","key","active","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","useParams","sm","md","lg","xl","keywor","addToCart","qty","countInStock","setItem","stringify","ProductScreen","setQty","setRating","comment","setComment","showModal","setShowModal","successProductReview","errorProductReview","isItemInCart","window","alert","ListGroup","description","disabled","reviews","createdAt","substring","productId","post","Group","controlId","Label","rows","Modal","onHide","ProductListScreen","loadingDelete","errorDelete","successDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteHandler","confirm","delete","deleteProduct","textAlign","Table","striped","bordered","hover","responsive","category","brand","FormContainer","ProductEditScreen","setName","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","loadingUpdate","errorUpdate","successUpdate","uploadFileHandler","file","files","formData","FormData","append","put","updateProduct","custom","CartScreen","useSearchParams","searchParams","Number","handleClose","handleShow","reduce","acc","removeFromCartHandler","removeFromCart","rounded","toFixed","LoginScreen","email","setEmail","password","setPassword","redirect","submitHandler","login","varaint","RegisterScreen","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","updateUserProfile","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","alignItems","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","sdkReady","setSdkReady","loadingPay","successPay","loadingSent","successSent","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","getOrderDetails","paypal","isSent","Date","sentAt","toUTCString","slice","amount","onSuccess","paymentResult","orderId","payOrder","sentOrder","deliverOrder","UserListScreen","confirmName","setConfirmName","username","deleteUser","marginTop","UserEditScreen","setIsAdmin","msg","updateUser","OrderListScreen","App","path","element","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a66bd743.chunk.js","sourcesContent":["import {\n  SHOW_ADDED_NOTIFICATION,\n  SHOW_ALREADY_NOTIFICATION,\n  SHOW_LOGOUT_NOTIFICATION,\n  SHOW_DELETED_NOTIFICATION,\n  HIDE_NOTIFICATION,\n} from '../constants/notificationConstants'\n\nconst notificationReducer = (\n  state = {\n    showAdded: false,\n    showAlready: false,\n    showLogout: false,\n    showDeleted: false,\n  },\n  action\n) => {\n  switch (action.type) {\n    case SHOW_ADDED_NOTIFICATION:\n      return {\n        ...state,\n        showAdded: true,\n      }\n\n    case SHOW_ALREADY_NOTIFICATION:\n      return {\n        ...state,\n        showAlready: true,\n      }\n\n    case SHOW_LOGOUT_NOTIFICATION:\n      return {\n        ...state,\n        showLogout: true,\n      }\n\n    case SHOW_DELETED_NOTIFICATION:\n      return {\n        ...state,\n        showDeleted: true,\n      }\n\n    case HIDE_NOTIFICATION:\n      return {\n        showAdded: false,\n        showAlready: false,\n        showLogout: false,\n        showDeleted: false,\n      }\n    default:\n      return state\n  }\n}\n\nexport default notificationReducer\n","export const SHOW_NOTIFICATION = 'SHOW_NOTIFICATION'\nexport const SHOW_ADDED_NOTIFICATION = 'SHOW_ADDED_NOTIFICATION'\nexport const SHOW_ALREADY_NOTIFICATION = 'SHOW_ALREADY_NOTIFICATION'\nexport const SHOW_LOGOUT_NOTIFICATION = 'SHOW_LOGOUT_NOTIFICATION'\nexport const SHOW_DELETED_NOTIFICATION = 'SHOW_DELETED_NOTIFICATION'\nexport const HIDE_NOTIFICATION = 'HIDE_NOTIFICATION'\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer,\n  productCreateReviewReducer,\n  productTopRatedReducer,\n} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport {\n  userDetailsReducer,\n  userLoginReducer,\n  userRegisterReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n} from './reducers/userReducers'\nimport notificationReducer from './reducers/notificationReducers'\nimport {\n  orderDetailsReducer,\n  orderListMyReducer,\n  orderListReducer,\n  orderPayReducer,\n  orderReducer,\n  orderDeliverReducer,\n  orderSentReducer,\n} from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n  notification: notificationReducer,\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productCreateReview: productCreateReviewReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n  orderSent: orderSentReducer,\n  orderDeliver: orderDeliverReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shipping')\n  ? JSON.parse(localStorage.getItem('shipping'))\n  : {}\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n    paymentMethod: localStorage.getItem('paymentMethod')\n      ? JSON.parse(localStorage.getItem('paymentMethod'))\n      : '',\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n","import {\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_RESET,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_RESET,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_RESET,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from '../constants/productConstants'\n\nexport const productListReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_LIST_SUCCESS:\n      return {\n        loading: false,\n        products: action.payload.products,\n        pages: action.payload.pages,\n        page: action.payload.page,\n      }\n\n    case PRODUCT_LIST_FAIL:\n      return { loading: false, error: action.error }\n\n    default:\n      return state\n  }\n}\n\nexport const productDetailsReducer = (\n  state = { product: { review: [] } },\n  action\n) => {\n  switch (action.type) {\n    case PRODUCT_DETAILS_SUCCESS:\n      return { loading: false, product: action.payload }\n\n    case PRODUCT_DETAILS_FAIL:\n      return { loading: false, error: action.error }\n\n    default:\n      return state\n  }\n}\n\nexport const productDeleteReducer = (state = { product: {} }, action) => {\n  switch (action.type) {\n    case PRODUCT_DELETE_REQUEST:\n      return {\n        loading: true,\n      }\n    case PRODUCT_DELETE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case PRODUCT_DELETE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    default:\n      return state\n  }\n}\n\nexport const productCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REQUEST:\n      return {\n        loading: true,\n      }\n    case PRODUCT_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        product: action.payload,\n      }\n    case PRODUCT_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case PRODUCT_CREATE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n  switch (action.type) {\n    case PRODUCT_UPDATE_REQUEST:\n      return {\n        loading: true,\n      }\n    case PRODUCT_UPDATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        product: action.payload,\n      }\n    case PRODUCT_UPDATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case PRODUCT_UPDATE_RESET:\n      return { product: {} }\n    default:\n      return state\n  }\n}\n\nexport const productCreateReviewReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REVIEW_REQUEST:\n      return {\n        loading: true,\n      }\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case PRODUCT_CREATE_REVIEW_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case PRODUCT_CREATE_REVIEW_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_TOP_REQUEST:\n      return {\n        loading: true,\n        products: [],\n      }\n    case PRODUCT_TOP_SUCCESS:\n      return {\n        loading: false,\n        products: action.payload,\n      }\n    case PRODUCT_TOP_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    default:\n      return state\n  }\n}\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\n\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\n","import {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_RESET_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants'\n\nexport const cartReducer = (\n  state = { cartItems: [], shipping: {} },\n  action\n) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload\n\n      const existItem = state.cartItems.find((x) => x.product === item.product)\n\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        }\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        }\n      }\n\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n      }\n\n    case CART_RESET_ITEM:\n      return {\n        ...state,\n        cartItems: [],\n      }\n\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return {\n        ...state,\n        shippingAddress: action.payload,\n      }\n\n    case CART_SAVE_PAYMENT_METHOD:\n      return {\n        ...state,\n        paymentMethod: action.payload,\n      }\n    default:\n      return state\n  }\n}\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\nexport const CART_RESET_ITEM = 'CART_RESET_ITEM'\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\n","import {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_RESET,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_RESET,\n} from '../constants/userConstants'\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true }\n\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload }\n\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true }\n\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload }\n\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return { loading: true }\n\n    case USER_DETAILS_SUCCESS:\n      return { loading: false, user: action.payload }\n\n    case USER_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n\n    case USER_DETAILS_RESET:\n      return { user: {} }\n    default:\n      return state\n  }\n}\n\nexport const userUpdateProfileReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST:\n      return { loading: true }\n\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return { loading: false, success: true, user: action.payload }\n\n    case USER_UPDATE_PROFILE_FAIL:\n      return { loading: false, error: action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport const userListReducer = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return { loading: true }\n\n    case USER_LIST_SUCCESS:\n      return { loading: false, users: action.payload }\n\n    case USER_LIST_FAIL:\n      return { loading: false, error: action.payload }\n\n    case USER_LIST_RESET:\n      return { users: [] }\n    default:\n      return state\n  }\n}\n\nexport const userDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return { loading: true }\n\n    case USER_DELETE_SUCCESS:\n      return { loading: false, success: true }\n\n    case USER_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n\n    default:\n      return state\n  }\n}\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return {\n        loading: true,\n      }\n    case USER_UPDATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case USER_UPDATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case USER_UPDATE_RESET:\n      return {\n        user: {},\n      }\n    default:\n      return state\n  }\n}\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_RESET'\n\n// Admin\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n","import {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_RESET,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_RESET,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_RESET,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_RESET,\n  ORDER_SENT_REQUEST,\n  ORDER_SENT_SUCCESS,\n  ORDER_SENT_FAIL,\n  ORDER_SENT_RESET,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nexport const orderReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_CREATE_REQUEST:\n      return {\n        loading: true,\n      }\n\n    case ORDER_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        order: action.payload,\n      }\n\n    case ORDER_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n\n    case ORDER_CREATE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderDetailsReducer = (\n  state = { loading: true, orderItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case ORDER_DETAILS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      }\n\n    case ORDER_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        order: action.payload,\n      }\n\n    case ORDER_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    default:\n      return state\n  }\n}\n\nexport const orderPayReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_PAY_REQUEST:\n      return {\n        loading: true,\n      }\n\n    case ORDER_PAY_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n\n    case ORDER_PAY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n\n    case ORDER_PAY_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n  const { type, payload } = action\n  switch (type) {\n    case ORDER_LIST_MY_REQUEST:\n      return {\n        loading: true,\n      }\n\n    case ORDER_LIST_MY_SUCCESS:\n      return {\n        loading: false,\n        orders: payload,\n      }\n\n    case ORDER_LIST_MY_FAIL:\n      return {\n        loading: false,\n        error: payload,\n      }\n\n    case ORDER_LIST_MY_RESET:\n      return { orders: [] }\n    default:\n      return state\n  }\n}\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_REQUEST:\n      return {\n        loading: true,\n      }\n\n    case ORDER_LIST_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      }\n\n    case ORDER_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n\n    case ORDER_LIST_RESET:\n      return { orders: [] }\n    default:\n      return state\n  }\n}\n\nexport const orderSentReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_SENT_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_SENT_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case ORDER_SENT_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_SENT_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderDeliverReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_DELIVER_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_DELIVER_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case ORDER_DELIVER_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_DELIVER_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\nexport const ORDER_DETAILS_RESET = 'ORDER_DETAILS_RESET'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_RESET = 'ORDER_LIST_MY_RESET'\n\nexport const ORDER_SENT_REQUEST = 'ORDER_SENT_REQUEST'\nexport const ORDER_SENT_SUCCESS = 'ORDER_SENT_SUCCESS'\nexport const ORDER_SENT_FAIL = 'ORDER_SENT_FAIL'\nexport const ORDER_SENT_RESET = 'ORDER_SENT_RESET'\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\n","import React, { useState } from 'react'\nimport { Row, Col, Toast, ToastContainer } from 'react-bootstrap'\nconst Notification = ({ show, color, message }) => {\n  const [showNotification, setNotification] = useState(false)\n\n  return (\n    <Row>\n      <Col xs={6}>\n        <ToastContainer\n          position='bottom-end'\n          style={{ marginRight: '35px', marginBottom: '55px', zIndex: '2' }}\n        >\n          <Toast\n            onClose={() => setNotification(false)}\n            show={show}\n            delay={3000}\n            autohide\n            bg={color}\n          >\n            <Toast.Header closeButton={false}>\n              <i\n                className='far fa-check-circle'\n                style={{ color: '#28a745', marginRight: '5px' }}\n              ></i>\n              <strong className='me-auto'>Notification</strong>\n              <small>Now</small>\n            </Toast.Header>\n            <Toast.Body>{message}</Toast.Body>\n          </Toast>\n        </ToastContainer>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Notification\n","import axios from 'axios'\nimport {\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_DETAILS_FAIL,\n  USER_DETAILS_RESET,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n} from '../constants/userConstants'\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_LOGIN_REQUEST })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      '/api/users/login',\n      { email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    })\n  }\n}\n\nexport const logout = () => async (dispatch) => {\n  localStorage.removeItem('userInfo')\n\n  dispatch({ type: USER_LOGOUT })\n  dispatch({ type: USER_DETAILS_RESET })\n  dispatch({ type: ORDER_LIST_MY_RESET })\n  dispatch({ type: USER_LIST_RESET })\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_REGISTER_REQUEST })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      '/api/users',\n      { name, email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    })\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    })\n  }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_DETAILS_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/users/${id}`, config)\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    })\n  }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_UPDATE_PROFILE_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/users/profile`, user, config)\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    })\n  }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_LIST_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get('/api/users', config)\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    })\n  }\n}\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_DELETE_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`/api/users/${id}`, config)\n\n    dispatch({\n      type: USER_DELETE_SUCCESS,\n    })\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    })\n  }\n}\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: USER_UPDATE_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\n\n    dispatch({ type: USER_UPDATE_SUCCESS })\n\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.msg\n          ? error.response.data.msg\n          : error.response,\n    })\n  }\n}\n","import React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\n\nconst SearchBox = () => {\n  const [keyword, setKeyword] = useState('')\n\n  const navigate = useNavigate()\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (keyword.trim()) {\n      navigate(`/search/${keyword}`)\n    } else {\n      navigate('/')\n    }\n  }\n  return (\n    <Form onSubmit={submitHandler} className='d-flex'>\n      <Form.Control\n        type='text'\n        name='q'\n        placeholder='Search Products..'\n        className='mr-sm-2 ml-sm-5'\n        style={{ marginLeft: '45px', marginRight: '16px' }}\n        onChange={(e) => setKeyword(e.target.value)}\n      ></Form.Control>\n      <Button type='submit' variant='outline-success' className='p-2'>\n        Search\n      </Button>\n    </Form>\n  )\n}\n\nexport default SearchBox\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Navbar, Nav, Container, NavDropdown, Badge } from 'react-bootstrap'\nimport Notification from '../components/Notification'\nimport { logout } from '../actions/userActions'\nimport { showLogoutNotification } from '../actions/notificationActions'\nimport SearchBox from './SearchBox'\n\nconst Header = () => {\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const cart = useSelector((state) => state.cart)\n  const { cartItems } = cart\n\n  const notification = useSelector((state) => state.notification)\n  const { showLogout } = notification\n\n  const logoutHandler = () => {\n    dispatch(logout())\n    dispatch(showLogoutNotification())\n  }\n  return (\n    <header>\n      <Notification\n        color={'success'}\n        message={'You have successfully logged out!'}\n        show={showLogout}\n      />\n      <Navbar bg='primary' variant='dark' expand='lg' collapseOnSelect>\n        <Container>\n          <LinkContainer to='/'>\n            <Navbar.Brand>PROSHOP</Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            <SearchBox />\n            <Nav className='ms-auto'>\n              <LinkContainer to='/cart' style={{ position: 'relative' }}>\n                <Nav.Link>\n                  <i className='fas fa-shopping-cart'></i> Cart\n                  {cartItems.length === 0 ? (\n                    ''\n                  ) : (\n                    <Badge pill bg='danger' style={badgeStyle}>\n                      <span style={{ fontSize: '12px' }}>\n                        {cartItems.length}\n                      </span>\n                    </Badge>\n                  )}\n                </Nav.Link>\n              </LinkContainer>\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id='username'>\n                  <LinkContainer to='/profile'>\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to='/login'>\n                  <Nav.Link href='/login'>\n                    <i className='fas fa-user'></i> Sign In\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n              {userInfo && userInfo.isAdmin && (\n                <NavDropdown title='Admin' id='adminmenu'>\n                  <LinkContainer to='/admin/userlist'>\n                    <NavDropdown.Item>Users</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to='/admin/productlist'>\n                    <NavDropdown.Item>Products</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to='/admin/orderlist'>\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  )\n}\n\nconst badgeStyle = {\n  position: 'absolute',\n  display: 'flex',\n  justifyContent: 'center',\n  width: '3px',\n  fontWeight: 'bold',\n  top: '-3px',\n  left: '51px',\n  opacity: '0.9',\n}\n\nexport default Header\n","import {\n  SHOW_ADDED_NOTIFICATION,\n  SHOW_ALREADY_NOTIFICATION,\n  SHOW_LOGOUT_NOTIFICATION,\n  SHOW_DELETED_NOTIFICATION,\n  HIDE_NOTIFICATION,\n} from '../constants/notificationConstants'\n\nexport const showAddedNotification = () => (dispatch) => {\n  try {\n    dispatch({ type: SHOW_ADDED_NOTIFICATION })\n\n    setTimeout(() => {\n      dispatch({ type: HIDE_NOTIFICATION })\n    }, 3000)\n  } catch (error) {\n    console.log(error.message)\n  }\n}\n\nexport const showAlreadyNotification = () => (dispatch) => {\n  try {\n    dispatch({ type: SHOW_ALREADY_NOTIFICATION })\n\n    setTimeout(() => {\n      dispatch({ type: HIDE_NOTIFICATION })\n    }, 3000)\n  } catch (error) {\n    console.log(error.message)\n  }\n}\n\nexport const showLogoutNotification = () => (dispatch) => {\n  try {\n    dispatch({ type: SHOW_LOGOUT_NOTIFICATION })\n\n    setTimeout(() => {\n      dispatch({ type: HIDE_NOTIFICATION })\n    }, 3000)\n  } catch (error) {\n    console.log(error.message)\n  }\n}\n\nexport const showDeletedNotification = () => (dispatch) => {\n  try {\n    dispatch({ type: SHOW_DELETED_NOTIFICATION })\n\n    setTimeout(() => {\n      dispatch({ type: HIDE_NOTIFICATION })\n    }, 3000)\n  } catch (error) {\n    console.log(error.message)\n  }\n}\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row>\n          <Col className='text-center py-3'>Copyright &copy; Proshop</Col>\n        </Row>\n      </Container>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\n\nconst Rating = ({ value, text, color }) => {\n  return (\n    <div className='rating'>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 1\n              ? 'fas fa-star'\n              : value >= 0.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 2\n              ? 'fas fa-star'\n              : value >= 1.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 3\n              ? 'fas fa-star'\n              : value >= 2.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 4\n              ? 'fas fa-star'\n              : value >= 3.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 5\n              ? 'fas fa-star'\n              : value >= 4.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span> {text && text}</span>\n    </div>\n  )\n}\n\nRating.defaultProps = {\n  color: '#f8e825',\n}\n\nexport default Rating\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Card } from 'react-bootstrap'\nimport Rating from './Rating'\nconst Product = ({ product }) => {\n  return (\n    <>\n      <Card className='my-3 p-3 rounded'>\n        <Link to={`/product/${product._id}`}>\n          <Card.Img src={product.image} variant='top' />\n        </Link>\n\n        <Card.Body>\n          <Link to={`/product/${product._id}`}>\n            <Card.Title as='div'>\n              <strong>{product.name}</strong>\n            </Card.Title>\n          </Link>\n          <Card.Text as='div' className='my-3'>\n            <Rating\n              value={product.rating}\n              text={`${product.numReviews} reviews`}\n            />\n          </Card.Text>\n          <Card.Text as='h3'>${product.price}</Card.Text>\n        </Card.Body>\n      </Card>\n    </>\n  )\n}\n\nexport default Product\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n  return (\n    <Spinner\n      animation='border'\n      role='status'\n      style={{\n        width: '100px',\n        height: '100px',\n        margin: 'auto',\n        display: 'block',\n      }}\n    >\n      <span className='sr-only'>Loading...</span>\n    </Spinner>\n  )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Message = ({ variant, children }) => {\n  return <Alert variant={variant}>{children}</Alert>\n}\n\nMessage.defaultProps = {\n  variant: 'info',\n}\nexport default Message\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\n  return (\n    pages > 1 && (\n      <Pagination>\n        {[...Array(pages).keys()].map((x) => (\n          <LinkContainer\n            key={x + 1}\n            to={\n              !isAdmin\n                ? keyword\n                  ? `/search/${keyword}/page/${x + 1}`\n                  : `/page/${x + 1}`\n                : `/admin/productlist/${x + 1}`\n            }\n          >\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n          </LinkContainer>\n        ))}\n      </Pagination>\n    )\n  )\n}\n\nexport default Paginate\n","import axios from 'axios'\nimport {\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from '../constants/productConstants'\n\nexport const listProducts =\n  (keyword = '', pageNumber = '') =>\n  async (dispatch) => {\n    try {\n      const { data } = await axios.get(\n        `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\n      )\n\n      dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data })\n    } catch (error) {\n      dispatch({\n        type: PRODUCT_LIST_FAIL,\n        error:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.response,\n      })\n    }\n  }\n\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    const { data } = await axios.get(`/api/products/${id}`)\n\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      error:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    })\n  }\n}\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: PRODUCT_DELETE_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`/api/products/${id}`, config)\n\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    })\n  }\n}\n\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: PRODUCT_CREATE_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post('/api/products', {}, config)\n\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    })\n  }\n}\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: PRODUCT_UPDATE_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/products/${product._id}`,\n      product,\n      config\n    )\n\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    })\n  }\n}\n\nexport const createProductReview =\n  (productId, review) => async (dispatch, getState) => {\n    try {\n      dispatch({ type: PRODUCT_CREATE_REVIEW_REQUEST })\n\n      const {\n        userLogin: { userInfo },\n      } = getState()\n\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      }\n\n      await axios.post(`/api/products/${productId}/reviews`, review, config)\n\n      dispatch({\n        type: PRODUCT_CREATE_REVIEW_SUCCESS,\n      })\n    } catch (error) {\n      dispatch({\n        type: PRODUCT_CREATE_REVIEW_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.response,\n      })\n    }\n  }\n\nexport const listTopProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_TOP_REQUEST })\n\n    const { data } = await axios.get(`/api/products/top`)\n\n    dispatch({ type: PRODUCT_TOP_SUCCESS, payload: data })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_TOP_FAIL,\n      error:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    })\n  }\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Carousel, Image } from 'react-bootstrap'\nimport Loader from './Loader'\nimport Message from './Message'\nimport { listTopProducts } from '../actions/productActions'\n\nconst ProductCarousel = () => {\n  const dispatch = useDispatch()\n\n  const productTopRated = useSelector((state) => state.productTopRated)\n  const { loading, error, products } = productTopRated\n\n  useEffect(() => {\n    dispatch(listTopProducts())\n  }, [dispatch])\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n    <Carousel pause='hover' className='bg-dark'>\n      {products.map((product) => (\n        <Carousel.Item key={product._id}>\n          <Link to={`/product/${product._id}`}>\n            <Image src={product.image} alt={product.name} fluid />\n            <Carousel.Caption className='carousel-caption'>\n              <h2>\n                {product.name} (${product.price})\n              </h2>\n            </Carousel.Caption>\n          </Link>\n        </Carousel.Item>\n      ))}\n    </Carousel>\n  )\n}\n\nexport default ProductCarousel\n","import React, { useEffect } from 'react'\nimport { Link, useParams } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport ProductCarousel from '../components/ProductCarousel'\nimport { listProducts } from '../actions/productActions'\n\nconst HomeScreen = () => {\n  let { keyword, pageNumber } = useParams()\n\n  pageNumber = pageNumber ? pageNumber : 1\n\n  const dispatch = useDispatch()\n\n  const productList = useSelector((state) => state.productList)\n  const { products, pages, page, error } = productList\n\n  useEffect(() => {\n    dispatch(listProducts(keyword, pageNumber))\n  }, [dispatch, keyword, pageNumber])\n\n  return (\n    <>\n      {!keyword ? (\n        <ProductCarousel />\n      ) : (\n        <Link to='/' className='btn btn-light'>\n          Go Back\n        </Link>\n      )}\n      <h1>Latest Products</h1>\n      {products.length === 0 ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger' message={error} />\n      ) : (\n        <>\n          <Row>\n            {products.map((product) => (\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                <Product product={product} />\n              </Col>\n            ))}\n          </Row>\n          <Paginate pages={pages} page={page} keywor={keyword ? keyword : ''} />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default HomeScreen\n","import axios from 'axios'\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants'\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/products/${id}`)\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty,\n    },\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeFromCart = (id) => async (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id,\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n  dispatch({ type: CART_SAVE_SHIPPING_ADDRESS, payload: data })\n\n  localStorage.setItem('shipping', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => async (dispatch) => {\n  dispatch({ type: CART_SAVE_PAYMENT_METHOD, payload: data })\n\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\n}\n","import React, { useState, useEffect } from 'react'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  Row,\n  Col,\n  Image,\n  ListGroup,\n  Card,\n  Button,\n  Form,\n  Container,\n  Modal,\n} from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Notification from '../components/Notification'\nimport {\n  listProductDetails,\n  createProductReview,\n} from '../actions/productActions'\nimport { addToCart } from '../actions/cartActions'\nimport {\n  showAddedNotification,\n  showAlreadyNotification,\n} from '../actions/notificationActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\nconst ProductScreen = () => {\n  const [qty, setQty] = useState(1)\n  const [rating, setRating] = useState(0)\n  const [comment, setComment] = useState('')\n\n  const [showModal, setShowModal] = useState(false)\n\n  const handleClose = () => setShowModal(false)\n  const handleShow = () => setShowModal(true)\n\n  const { id } = useParams()\n\n  const navigate = useNavigate()\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { error, product } = productDetails\n\n  const productCreateReview = useSelector((state) => state.productCreateReview)\n  const { success: successProductReview, error: errorProductReview } =\n    productCreateReview\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const cart = useSelector((state) => state.cart)\n  const { cartItems } = cart\n\n  const notification = useSelector((state) => state.notification)\n  const { showAdded, showAlready } = notification\n\n  const isItemInCart = cartItems.filter((item) => item.product === product._id)\n\n  console.log(isItemInCart)\n  useEffect(() => {\n    if (successProductReview) {\n      window.alert('Review Submitted!')\n      setRating(0)\n      setComment('')\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n    }\n    dispatch(listProductDetails(id))\n  }, [dispatch, id, successProductReview])\n\n  const addToCartHandler = () => {\n    handleShow()\n    dispatch(addToCart(product._id, qty))\n    if (isItemInCart.length !== 0) {\n      dispatch(showAlreadyNotification())\n    }\n    if (isItemInCart.length === 0) {\n      dispatch(showAddedNotification())\n    }\n    // navigate(`/cart/${id}?qty=${qty}`)\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(createProductReview(id, { rating, comment }))\n  }\n\n  return (\n    <>\n      {isItemInCart.length === 0 ? (\n        <Notification\n          color={'success'}\n          message={'Item has been added to Cart'}\n          show={showAdded}\n        />\n      ) : isItemInCart.length !== 0 ? (\n        <Notification\n          color={'warning'}\n          message={'Item already in Cart'}\n          show={showAlready}\n        />\n      ) : (\n        ''\n      )}\n\n      <Link to='/' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      {!product._id || product._id !== id ? (\n        <Loader />\n      ) : error ? (\n        <Message>{error}</Message>\n      ) : (\n        <>\n          <Row>\n            <Col md={6}>\n              <Image src={product.image} alt={product.name} />\n            </Col>\n\n            <Col md={3}>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  {\n                    <Rating\n                      value={product.rating}\n                      text={`${product.numReviews} reviews`}\n                    />\n                  }\n                </ListGroup.Item>\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n                <ListGroup.Item>\n                  Description: {product.description}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n\n            <Col md={3}>\n              <Card>\n                <ListGroup variant='flush'>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>\n                        <strong>${product.price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Stock:</Col>\n                      <Col>\n                        {product.countInStock <= 0\n                          ? 'Out Of Stock'\n                          : 'In Stock'}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Qty</Col>\n                        <Col>\n                          <Form.Control\n                            as='select'\n                            value={qty}\n                            onChange={(e) => setQty(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map(\n                              (x) => (\n                                <option key={x + 1}>{x + 1}</option>\n                              )\n                            )}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n\n                  <ListGroup.Item>\n                    <Row>\n                      <Button\n                        onClick={addToCartHandler}\n                        className='btn-block'\n                        type='button'\n                        style={{ width: '100%' }}\n                        disabled={product.countInStock === 0}\n                      >\n                        Add To Cart\n                      </Button>\n                    </Row>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <h2>Reviews</h2>\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\n              <ListGroup variant='flush'>\n                {product.reviews.map((review) => (\n                  <ListGroup.Item key={review._id}>\n                    <strong>{review.name}</strong>\n                    <Rating value={review.rating} />\n                    <p>{review.createdAt.substring(0, 10)}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n                <ListGroup.Item>\n                  <h2>Write a customer review</h2>\n                  {errorProductReview && (\n                    <Message>{errorProductReview}</Message>\n                  )}\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId='rating'>\n                        <Form.Label>Rating</Form.Label>\n                        <Form.Control\n                          as='select'\n                          className='mb-3'\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=''>select...</option>\n                          <option value={1}>1 - poor</option>\n                          <option value={2}>2 - Fair</option>\n                          <option value={3}>3 - Good</option>\n                          <option value={4}>4 - Very Good</option>\n                          <option value={5}>5 - Excellent</option>\n                        </Form.Control>\n                        <Form.Label>Comment</Form.Label>\n                        <Form.Control\n                          as='textarea'\n                          rows={3}\n                          className='mb-3'\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        />\n                        <Button type='submit'>Submit</Button>\n                      </Form.Group>\n                    </Form>\n                  ) : (\n                    <Message>\n                      Please <Link to='/login'>sign in</Link> to write a review\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n\n            <Modal show={showModal} onHide={handleClose} style={{ top: '10%' }}>\n              <Modal.Header className='justify-content-center'>\n                <Modal.Title>{qty} item added to Cart</Modal.Title>\n              </Modal.Header>\n              <Modal.Body className='show-grid'>\n                <Container>\n                  <Row>\n                    <Col md={4}>\n                      <Image\n                        src={product.image}\n                        alt={product.name}\n                        style={{ width: '100%' }}\n                      ></Image>\n                    </Col>\n                    <Col md={8}>\n                      <Row>\n                        <strong>{product.name}</strong>\n                      </Row>\n                      <Row>\n                        <Col md={6}>Price:</Col>\n                        <Col md={6}>${product.price * qty}</Col>\n                      </Row>\n                    </Col>\n                  </Row>\n                </Container>\n              </Modal.Body>\n              <Modal.Footer>\n                <Button variant='primary' onClick={() => navigate('/shipping')}>\n                  {cartItems.length > 1\n                    ? `Checkout ${cartItems.length} items `\n                    : `Checkout ${cartItems.length} item`}\n                </Button>\n                <Button variant='info' onClick={() => navigate('/cart')}>\n                  Go to Cart\n                </Button>\n              </Modal.Footer>\n            </Modal>\n          </Row>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductScreen\n","import React, { useEffect } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct,\n} from '../actions/productActions'\n\nconst ProductListScreen = () => {\n  let { pageNumber } = useParams()\n\n  pageNumber = pageNumber ? pageNumber : 1\n\n  const navigate = useNavigate()\n\n  const dispatch = useDispatch()\n\n  const productList = useSelector((state) => state.productList)\n  const { loading, error, products, pages, page } = productList\n\n  const productDelete = useSelector((state) => state.productDelete)\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = productDelete\n\n  const productCreate = useSelector((state) => state.productCreate)\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    product: createdProduct,\n  } = productCreate\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET })\n\n    if (!userInfo || !userInfo.isAdmin) {\n      navigate('/login')\n    }\n\n    if (successCreate) {\n      navigate(`/admin/product/${createdProduct._id}/edit`)\n    } else {\n      dispatch(listProducts('', pageNumber))\n    }\n  }, [\n    dispatch,\n    navigate,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdProduct,\n    pageNumber,\n  ])\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure?')) {\n      dispatch(deleteProduct(id))\n    }\n  }\n\n  const createProductHandler = () => {\n    dispatch(createProduct())\n  }\n\n  return (\n    <>\n      <Row className='align-items-center'>\n        <Col>\n          <h1>Products</h1>\n        </Col>\n        <Col style={{ textAlign: 'right' }}>\n          <Button className='my-3' onClick={createProductHandler}>\n            <i className='fas fa-plus'></i> Create Product\n          </Button>\n        </Col>\n      </Row>\n\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr className='align-middle text-center'>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>PRICE</th>\n                <th>CATEGORY</th>\n                <th>BRAND</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {products.map((product) => (\n                <tr key={product._id} className='align-middle text-center'>\n                  <td>{product._id}</td>\n                  <td>{product.name}</td>\n                  <td>${product.price}</td>\n                  <td>{product.category}</td>\n                  <td>{product.brand}</td>\n                  <td>\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                      <Button variant='light' className='btn-sm'>\n                        <i className='fas fa-edit'></i>\n                      </Button>\n                    </LinkContainer>\n                    <Button\n                      variant='danger'\n                      className='btn-sm'\n                      onClick={() => deleteHandler(product._id)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <Paginate pages={pages} page={page} isAdmin={true} />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductListScreen\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className='justify-content-md-center'>\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default FormContainer\n","import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Form, Button } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\n\nconst ProductEditScreen = () => {\n  const { id } = useParams()\n  const navigate = useNavigate()\n\n  const [name, setName] = useState('')\n  const [price, setPrice] = useState(0)\n  const [image, setImage] = useState('')\n  const [brand, setBrand] = useState('')\n  const [category, setCategory] = useState('')\n  const [countInStock, setCountInStock] = useState(0)\n  const [description, setDescription] = useState('')\n  const [uploading, setUploading] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  const productUpdate = useSelector((state) => state.productUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = productUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET })\n      navigate('/admin/productlist')\n    } else {\n      if (!product || !product.name || product._id !== id) {\n        dispatch(listProductDetails(id))\n      } else {\n        setName(product.name)\n        setPrice(product.price)\n        setImage(product.image)\n        setBrand(product.brand)\n        setCategory(product.category)\n        setCountInStock(product.countInStock)\n        setDescription(product.description)\n      }\n    }\n  }, [dispatch, navigate, product, id, successUpdate])\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0]\n    const formData = new FormData()\n    formData.append('image', file)\n    setUploading(true)\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      }\n\n      const { data } = await axios.post('/api/upload', formData, config)\n      setImage(data)\n      setUploading(false)\n    } catch (error) {\n      console.error(error)\n      setUploading(false)\n    }\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(\n      updateProduct({\n        _id: id,\n        name,\n        price,\n        image,\n        brand,\n        category,\n        countInStock,\n        description,\n      })\n    )\n  }\n\n  return (\n    <>\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit Product</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name' className='my-3'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='price' className='mb-3'>\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter price'\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='image'>\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter image url'\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              ></Form.Control>\n              <Form.Control\n                id='image-file'\n                className='mb-3'\n                type='file'\n                custom\n                onChange={uploadFileHandler}\n              ></Form.Control>\n              {uploading && <Loader />}\n            </Form.Group>\n\n            <Form.Group controlId='brand' className='mb-3'>\n              <Form.Label>Brand</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter brand'\n                value={brand}\n                onChange={(e) => setBrand(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='countInStock' className='mb-3'>\n              <Form.Label>Count In Stock</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter countInStock'\n                value={countInStock}\n                onChange={(e) => setCountInStock(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='category' className='mb-3'>\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter category'\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='description' className='mb-3'>\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter description'\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default ProductEditScreen\n","import React, { useEffect, useState } from 'react'\nimport { useParams, useSearchParams, Link, useNavigate } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  Row,\n  Col,\n  ListGroup,\n  Image,\n  Form,\n  Button,\n  Card,\n  Modal,\n} from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\nimport { showDeletedNotification } from '../actions/notificationActions'\nimport Notification from '../components/Notification'\n\nconst CartScreen = () => {\n  const { id } = useParams()\n  const [searchParams] = useSearchParams()\n  const navigate = useNavigate()\n\n  const qty = searchParams.get('qty') ? Number(searchParams.get('qty')) : 1\n\n  const [showModal, setShowModal] = useState(false)\n\n  const handleClose = () => setShowModal(false)\n  const handleShow = () => setShowModal(true)\n\n  const dispatch = useDispatch()\n\n  const cart = useSelector((state) => state.cart)\n  const { cartItems } = cart\n\n  console.log(cartItems.reduce((acc, item) => acc + item.qty, 0))\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const notification = useSelector((state) => state.notification)\n  const { showDeleted } = notification\n\n  useEffect(() => {\n    if (id) {\n      dispatch(addToCart(id, qty))\n    }\n  }, [dispatch, id, qty])\n\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id))\n    handleClose()\n    dispatch(showDeletedNotification())\n  }\n\n  const checkoutHandler = () => {\n    if (!userInfo) {\n      navigate('/login?redirect=shipping')\n    } else {\n      navigate('/shipping')\n    }\n  }\n\n  return (\n    <Row>\n      <Notification\n        color={'success'}\n        message={'Item has been successfully deleted from Cart'}\n        show={showDeleted}\n      />\n\n      <Col md={8}>\n        <h1>Shopping cart</h1>\n        {cartItems.length === 0 ? (\n          <Message>\n            Your cart is empty <Link to='/'>Go back</Link>\n          </Message>\n        ) : (\n          <ListGroup variant='flush'>\n            {cartItems.map((item) => (\n              <ListGroup.Item key={item.product}>\n                <Row>\n                  <Col md={2}>\n                    <Link to={`/product/${item.product}`}>\n                      <Image src={item.image} alt={item.name} fluid rounded />\n                    </Link>\n                  </Col>\n                  <Col md={3}>\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                  </Col>\n                  <Col md={2}>${item.price}</Col>\n                  <Col md={2}>\n                    <Form.Control\n                      as='select'\n                      value={item.qty}\n                      onChange={(e) =>\n                        dispatch(\n                          addToCart(item.product, Number(e.target.value))\n                        )\n                      }\n                    >\n                      {[...Array(item.countInStock).keys()].map((x) => (\n                        <option key={x + 1}>{x + 1}</option>\n                      ))}\n                    </Form.Control>\n                  </Col>\n                  <Col md={2}>\n                    <Button\n                      type='button'\n                      variant='light'\n                      // onClick={() => removeFromCartHandler(item.product)}\n                      onClick={handleShow}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n\n                    <Modal\n                      show={showModal}\n                      onHide={handleClose}\n                      style={{ top: '10%' }}\n                    >\n                      <Modal.Header className='justify-content-center'>\n                        <Modal.Title>\n                          <i\n                            className='fas fa-exclamation-circle text-warning'\n                            style={{ fontSize: '5rem' }}\n                          ></i>\n                        </Modal.Title>\n                      </Modal.Header>\n                      <Modal.Body className='text-center'>\n                        Are you sure you really want to delete this item?\n                      </Modal.Body>\n                      <Modal.Footer>\n                        <Button variant='secondary' onClick={handleClose}>\n                          Close\n                        </Button>\n                        <Button\n                          variant='danger'\n                          onClick={() => removeFromCartHandler(item.product)}\n                        >\n                          Delete\n                        </Button>\n                      </Modal.Footer>\n                    </Modal>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        )}\n      </Col>\n\n      <Col md={4}>\n        <Card>\n          <ListGroup>\n            <ListGroup.Item>\n              <h2>\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\n                items\n              </h2>\n              ${' '}\n              {cartItems\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\n                .toFixed(2)}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Button\n                type='button'\n                className='btn-block'\n                style={{ width: '100%' }}\n                disabled={cartItems.length === 0}\n                onClick={checkoutHandler}\n              >\n                Proceed To Checkout\n              </Button>\n            </ListGroup.Item>\n          </ListGroup>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default CartScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link, useSearchParams, useNavigate } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Form, Button } from 'react-bootstrap'\nimport FormContainer from '../components/FormContainer'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { login } from '../actions/userActions'\n\nconst LoginScreen = () => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const [searchParams] = useSearchParams()\n  const navigate = useNavigate()\n\n  const redirect = searchParams.get('redirect')\n    ? searchParams.get('redirect')\n    : ''\n\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { loading, error, userInfo } = userLogin\n\n  useEffect(() => {\n    if (userInfo && redirect === '/') {\n      navigate('/')\n    } else if (userInfo) {\n      navigate(`/${redirect}`)\n    }\n  }, [userInfo, redirect, navigate])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(login(email, password))\n  }\n\n  return (\n    <FormContainer>\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <h1>Sign In</h1>\n      <Form onSubmit={(e) => submitHandler(e)}>\n        <Form.Group controlId='email' className='mb-3'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Enter email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId='password' className='mb-3'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n\n        <Button type='submit' varaint='primary'>\n          Sign In\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n          New Customer?{' '}\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n            Create an account.\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default LoginScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link, useSearchParams, useNavigate } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Form, Button } from 'react-bootstrap'\nimport FormContainer from '../components/FormContainer'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { register } from '../actions/userActions'\n\nconst RegisterScreen = () => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState('')\n\n  const [searchParams] = useSearchParams()\n  const navigate = useNavigate()\n\n  const redirect = searchParams.get('redirect')\n    ? searchParams.get('redirect')\n    : '/'\n\n  const dispatch = useDispatch()\n\n  const userRegister = useSelector((state) => state.userRegister)\n  const { loading, error, userInfo } = userRegister\n\n  useEffect(() => {\n    if (userInfo) {\n      navigate(redirect)\n    }\n  }, [userInfo, navigate, redirect])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n    } else {\n      dispatch(register(name, email, password))\n    }\n  }\n\n  return (\n    <FormContainer>\n      {message && <Message variant='danger'>{message}</Message>}\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <h1>Sign Up</h1>\n      <Form onSubmit={(e) => submitHandler(e)}>\n        <Form.Group controlId='name' className='mb-3'>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type='name'\n            placeholder='Enter Name'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId='email' className='mb-3'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Enter email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId='password' className='mb-3'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId='confirmPassword' className='mb-3'>\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Confirm password'\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Button type='submit' varaint='primary'>\n          Sign Up\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n          Have an account?{' '}\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n            Login\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default RegisterScreen\n","import React, { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Form, Button, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_DETAILS_RESET } from '../constants/userConstants'\nimport { listMyOrders } from '../actions/orderActions'\n// import OrderCard from '../components/OrderCard'\n\nconst ProfileScreen = () => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState('')\n\n  const navigate = useNavigate()\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\n  const { success } = userUpdateProfile\n\n  const orderListMy = useSelector((state) => state.orderListMy)\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n  // console.log(orders)\n  useEffect(() => {\n    // Not logged in\n    if (!userInfo) {\n      navigate('/login')\n    } else {\n      // No details\n      if (!user || !user.name) {\n        dispatch({ type: USER_DETAILS_RESET })\n        dispatch(getUserDetails('profile'))\n        dispatch(listMyOrders())\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n      }\n    }\n  }, [userInfo, navigate, dispatch, user, orders])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n    } else {\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\n    }\n  }\n  // let neededItems = []\n  // const getNeededItems = (orders) => {\n  //   let cardItems = {}\n  //   if (orders) {\n  //     console.log(orders)\n  //     orders.map((order) => {\n  //       cardItems.orderDate = order.createdAt\n  //       cardItems.orderId = order._id\n  //       cardItems.totalPrice = order.totalPrice\n  //       console.log(order.orderItems.length)\n\n  //       for (let i = 0; i < order.orderItems.length; i++) {\n  //         cardItems.productId = order.orderItems[i].product\n  //         cardItems.image = order.orderItems[i].image\n  //         cardItems.productName = order.orderItems[i].name\n  //         cardItems.productPrice = order.orderItems[i].price\n  //         cardItems.qty = order.orderItems[i].qty\n  //       }\n\n  //       // neededItems.productId = order.product\n  //       // neededItems.image = order.image\n  //       // neededItems.productName = order.name\n  //       // neededItems.productPrice = order.price\n  //       // neededItems.qty = order.qty\n\n  //       // neededItems.push(\n  //       //   {\n  //       //     orderDate: order.createdAt,\n  //       //   },\n  //       //   { orderId: order._id },\n  //       //   { totalPrice: order.totalPrice }\n  //       // )\n  //       // order.orderItems.map((order) => {\n  //       //   neededItems.push(\n  //       //     { productId: order.product },\n  //       //     { image: order.image },\n  //       //     { productName: order.name },\n  //       //     { produdctPrice: order.price },\n  //       //     { qty: order.qty }\n  //       //   )\n  //       // })\n  //     })\n  //   }\n  //   neededItems.push(cardItems)\n  //   return neededItems\n  // }\n  // getNeededItems(orders)\n  // console.log('neededItems: ', neededItems)\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {message && <Message variant='danger'>{message}</Message>}\n        {error && <Message variant='danger'>{error}</Message>}\n        {success && <Message variant='success'>Profile Updated</Message>}\n        {loading && <Loader />}\n        <Form onSubmit={(e) => submitHandler(e)}>\n          <Form.Group controlId='name' className='mb-3'>\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type='name'\n              placeholder='Enter Name'\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId='email' className='mb-3'>\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              type='email'\n              placeholder='Enter email'\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId='password' className='mb-3'>\n            <Form.Label>Change Password</Form.Label>\n            <Form.Control\n              type='password'\n              placeholder='Current password'\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId='confirmPassword' className='mb-3'>\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type='password'\n              placeholder='Confirm password'\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            />\n          </Form.Group>\n          <Button type='submit' varaint='primary'>\n            Update\n          </Button>\n        </Form>\n      </Col>\n\n      <Col md={9}>\n        <h2>My Orders</h2>\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant='danger'>{errorOrders}</Message>\n        ) : orders.length === 0 ? (\n          <Message>Your order is empty</Message>\n        ) : (\n          <Table\n            striped\n            bordered\n            hover\n            responsive\n            className='table-sm text-center'\n          >\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>${order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button variant='light' className='btn-md'>\n                        DETAILS\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  )\n}\n\nexport default ProfileScreen\n\n/* \n  <Col md={9}>\n    <h2>My Orders</h2>\n      ** here **\n    </Col>\n\n   \n*/\n\n/* {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant='danger'>{errorOrders}</Message>\n        ) : orders.length === 0 ? (\n          <Message>Your order is empty</Message>\n        ) : (\n          orders.map((order) => (\n            <div key={Math.random()}>\n              <OrderCard order={order} />\n            </div>\n          ))\n        )} */\n","import axios from 'axios'\nimport {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_FAIL,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_REQUEST,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_FAIL,\n  ORDER_SENT_REQUEST,\n  ORDER_SENT_SUCCESS,\n  ORDER_SENT_FAIL,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_FAIL,\n} from '../constants/orderConstants'\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_CREATE_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post('/api/orders', order, config)\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    })\n  }\n}\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_DETAILS_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders/${id}`, config)\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    })\n  }\n}\n\nexport const payOrder =\n  (orderId, paymentResult) => async (dispatch, getState) => {\n    try {\n      dispatch({ type: ORDER_PAY_REQUEST })\n\n      const {\n        userLogin: { userInfo },\n      } = getState()\n\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      }\n\n      const { data } = await axios.put(\n        `/api/orders/${orderId}/pay`,\n        paymentResult,\n        config\n      )\n\n      dispatch({\n        type: ORDER_PAY_SUCCESS,\n        payload: data,\n      })\n    } catch (error) {\n      dispatch({\n        type: ORDER_PAY_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.response,\n      })\n    }\n  }\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_LIST_MY_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders/myorders`, config)\n\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    })\n  }\n}\n\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_LIST_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders`, config)\n\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    })\n  }\n}\n\nexport const sentOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_SENT_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/orders/${order._id}/sent`,\n      {},\n      config\n    )\n\n    dispatch({\n      type: ORDER_SENT_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ORDER_SENT_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    })\n  }\n}\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: ORDER_DELIVER_REQUEST })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/orders/${order._id}/deliver`,\n      {},\n      config\n    )\n\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response,\n    })\n  }\n}\n","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\n  return (\n    <Nav className='justify-content-center mb-4'>\n      <Nav.Item>\n        {step1 ? (\n          <div style={style}>\n            <LinkContainer to='/login'>\n              <Nav.Link>Sign In </Nav.Link>\n            </LinkContainer>\n            <span>\n              <i className='fas fa-angle-right text-primary'></i>\n            </span>\n          </div>\n        ) : (\n          <Nav.Link disabled>Sign In</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step2 ? (\n          <div style={style}>\n            <LinkContainer to='/shipping'>\n              <Nav.Link>Shipping</Nav.Link>\n            </LinkContainer>\n            <span>\n              <i className='fas fa-angle-right text-primary'></i>\n            </span>\n          </div>\n        ) : (\n          <Nav.Link disabled>Shipping</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step3 ? (\n          <div style={style}>\n            <LinkContainer to='/payment'>\n              <Nav.Link>Payment</Nav.Link>\n            </LinkContainer>\n            <span>\n              <i className='fas fa-angle-right text-primary'></i>\n            </span>\n          </div>\n        ) : (\n          <Nav.Link disabled>Payment</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step4 ? (\n          <LinkContainer to='/placeorder'>\n            <Nav.Link>Place Order</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Place Order</Nav.Link>\n        )}\n      </Nav.Item>\n    </Nav>\n  )\n}\n\nconst style = {\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n}\n\nexport default CheckoutSteps\n","import React, { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Form, Button } from 'react-bootstrap'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nconst ShippingScreen = () => {\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  const [address, setAddress] = useState(shippingAddress.address)\n  const [city, setCity] = useState(shippingAddress.city)\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n  const [country, setCountry] = useState(shippingAddress.country)\n\n  const navigate = useNavigate()\n\n  const dispatch = useDispatch()\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(saveShippingAddress({ address, city, postalCode, country }))\n    navigate('/payment')\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 />\n      <h1>Shipping</h1>\n      <Form onSubmit={(e) => submitHandler(e)}>\n        <Form.Group controlId='address' className='mb-3'>\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter address'\n            value={address}\n            onChange={(e) => setAddress(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId='city' className='mb-3'>\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter city'\n            value={city}\n            onChange={(e) => setCity(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId='postalCode' className='mb-3'>\n          <Form.Label>Postal Code</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter postal code'\n            value={postalCode}\n            onChange={(e) => setPostalCode(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId='country' className='mb-3'>\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter country'\n            value={country}\n            onChange={(e) => setCountry(e.target.value)}\n          />\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default ShippingScreen\n","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport FormContainer from '../components/FormContainer'\nimport { savePaymentMethod } from '../actions/cartActions'\nimport CheckoutSteps from '../components/CheckoutSteps'\n\nconst PaymentScreen = () => {\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n  const navigate = useNavigate()\n\n  if (!shippingAddress) {\n    navigate('/shipping')\n  }\n\n  const dispatch = useDispatch()\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(savePaymentMethod(paymentMethod))\n    navigate('/placeorder')\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n      <h1>Payment Method</h1>\n      <Form onSubmit={(e) => submitHandler(e)}>\n        <Form.Group className='mb-3'>\n          <Form.Label as='legend'>Select Method</Form.Label>\n          <Col>\n            <Form.Check\n              type='radio'\n              label='PayPal or Credit Card'\n              id='PayPal'\n              name='paymentMethod'\n              value='PayPal'\n              checked\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n            {/* <Form.Check\n              type='radio'\n              label='Stripe'\n              id='Stripe'\n              value='Stripe'\n              name='paymentMethod'\n              onChange={e => setPaymentMethod(e.target.value)}\n            ></Form.Check> */}\n          </Col>\n        </Form.Group>\n        <Button type='submit' variant='primary'>\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default PaymentScreen\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport Message from '../components/Message'\nimport { CART_RESET_ITEM } from '../constants/cartConstants'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\nimport { createOrder } from '../actions/orderActions'\n\nconst PlaceOrderScreen = () => {\n  const cart = useSelector((state) => state.cart)\n\n  const orderCreate = useSelector((state) => state.orderCreate)\n  const { order, success } = orderCreate\n\n  const dispatch = useDispatch()\n\n  const navigate = useNavigate()\n\n  //   Calculate prices\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2)\n  }\n\n  cart.itemsPrice = addDecimals(\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  )\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 25)\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\n  cart.totalPrice = (\n    Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice)\n  ).toFixed(2)\n\n  useEffect(() => {\n    if (success) {\n      console.log(order)\n      navigate(`/order/${order._id}`)\n      dispatch({ type: ORDER_CREATE_RESET })\n    }\n\n    // eslint-disable-next-line\n  }, [success, navigate, cart])\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    )\n    localStorage.removeItem('cartItems')\n    setTimeout(() => {\n      dispatch({ type: CART_RESET_ITEM })\n    }, 2000)\n  }\n\n  return (\n    <>\n      <Row>\n        <CheckoutSteps step1 step2 step3 step4 />\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Address: </strong>\n                {cart.shippingAddress.address}\n                {', '}\n                {cart.shippingAddress.city} {cart.shippingAddress.postalCode}{' '}\n                {cart.shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item variant='flush'>\n              <h2>Payment Method</h2>\n              <strong>Method: </strong>\n              {cart.paymentMethod}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message>Your cart is empty</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n                <small>*Free shipping for total items over $100</small>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items: </Col>\n                  <Col>${cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping: </Col>\n                  <Col>${cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax: </Col>\n                  <Col>${cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>\n                    <strong>Total: </strong>\n                  </Col>\n                  <Col>\n                    <strong>${cart.totalPrice}</strong>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button\n                  type='button'\n                  style={{ width: '100%' }}\n                  disabled={cart.cartItems === 0}\n                  onClick={placeOrderHandler}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default PlaceOrderScreen\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link, useNavigate, useParams } from 'react-router-dom'\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport {\n  ORDER_PAY_RESET,\n  ORDER_SENT_RESET,\n  ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\nimport {\n  getOrderDetails,\n  payOrder,\n  deliverOrder,\n  sentOrder,\n} from '../actions/orderActions'\n\nconst OrderScreen = () => {\n  const { id } = useParams()\n  const navigate = useNavigate()\n\n  const [sdkReady, setSdkReady] = useState(false)\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const orderDetails = useSelector((state) => state.orderDetails)\n  const { order, loading, error } = orderDetails\n\n  const orderPay = useSelector((state) => state.orderPay)\n  const { loading: loadingPay, success: successPay } = orderPay\n\n  const orderSent = useSelector((state) => state.orderSent)\n  const { loading: loadingSent, success: successSent } = orderSent\n\n  const orderDeliver = useSelector((state) => state.orderDeliver)\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n  const dispatch = useDispatch()\n\n  if (!loading) {\n    //   Calculate prices\n    const addDecimals = (num) => {\n      return (Math.round(num * 100) / 100).toFixed(2)\n    }\n\n    order.itemsPrice = addDecimals(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    )\n  }\n\n  useEffect(() => {\n    if (!userInfo) {\n      navigate('/login')\n    }\n\n    const addPayPalScript = async () => {\n      const { data: clientId } = await axios.get('/api/config/pay')\n\n      const script = document.createElement('script')\n      script.type = 'text/javascript'\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n      script.async = true\n      script.onload = () => {\n        setSdkReady(true)\n      }\n\n      document.body.appendChild(script)\n    }\n\n    if (\n      !order ||\n      (order && order._id !== id) ||\n      successPay ||\n      successSent ||\n      successDeliver\n    ) {\n      dispatch({ type: ORDER_SENT_RESET })\n      dispatch({ type: ORDER_DELIVER_RESET })\n      dispatch({ type: ORDER_PAY_RESET })\n      dispatch(getOrderDetails(id))\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript()\n      } else {\n        setSdkReady(true)\n      }\n    }\n  }, [\n    dispatch,\n    navigate,\n    userInfo,\n    order,\n    id,\n    successPay,\n    successSent,\n    successDeliver,\n  ])\n\n  const sentHandler = () => {\n    dispatch(sentOrder(order))\n  }\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order))\n  }\n\n  const successPaymentHandler = (paymentResult) => {\n    console.log(paymentResult)\n    dispatch(payOrder(id, paymentResult))\n  }\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n    <Row>\n      <h1>Order {order._id}</h1>\n      <Col md={8}>\n        <ListGroup variant='flush'>\n          <ListGroup.Item>\n            <h2>Shipping</h2>\n            <p>\n              <strong>Name: </strong> {order.user.name}\n            </p>\n            <p>\n              <strong>Email: </strong>{' '}\n              <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n            </p>\n            <p>\n              <strong>Address: </strong>\n              {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\n              {order.shippingAddress.postalCode},{' '}\n              {order.shippingAddress.country}\n            </p>\n            {order.isSent && !order.isDelivered ? (\n              <Message>\n                Shipped on {new Date(order.sentAt).toUTCString().slice(0, -3)}\n              </Message>\n            ) : order.isSent && order.isDelivered ? (\n              <Message variant='success'>\n                Delivered on{' '}\n                {new Date(order.deliveredAt).toUTCString().slice(0, -3)}\n              </Message>\n            ) : (\n              <Message variant='danger'>Order Not Shipped</Message>\n            )}\n          </ListGroup.Item>\n          <ListGroup.Item variant='flush'>\n            <h2>Payment Method</h2>\n            <p>\n              <strong>Method: </strong>\n              {order.paymentMethod}\n            </p>\n            {order.isPaid ? (\n              <Message variant='success'>\n                Paid on {new Date(order.paidAt).toUTCString().slice(0, -3)}\n              </Message>\n            ) : (\n              <Message variant='danger'>Order Not Paid</Message>\n            )}\n          </ListGroup.Item>\n\n          <ListGroup.Item>\n            <h2>Order Items</h2>\n            {order.orderItems.length === 0 ? (\n              <Message>Order is empty</Message>\n            ) : (\n              <ListGroup variant='flush'>\n                {order.orderItems.map((item, index) => (\n                  <ListGroup.Item key={index}>\n                    <Row>\n                      <Col md={1}>\n                        <Image src={item.image} alt={item.name} fluid rounded />\n                      </Col>\n\n                      <Col>\n                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                      </Col>\n\n                      <Col md={4}>\n                        {item.qty} x ${item.price} = ${item.qty * item.price}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                ))}\n              </ListGroup>\n            )}\n          </ListGroup.Item>\n        </ListGroup>\n      </Col>\n\n      <Col md={4}>\n        <Card>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Order Summary</h2>\n              <small>*Free shipping for total items over $100</small>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Row>\n                <Col>Items: </Col>\n                <Col>${order.itemsPrice}</Col>\n              </Row>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Row>\n                <Col>Shipping: </Col>\n                <Col>${order.shippingPrice}</Col>\n              </Row>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Row>\n                <Col>Tax: </Col>\n                <Col>${order.taxPrice}</Col>\n              </Row>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Row>\n                <Col>Total: </Col>\n                <Col>\n                  <strong>${order.totalPrice}</strong>\n                </Col>\n              </Row>\n            </ListGroup.Item>\n            {!order.isPaid && (\n              <ListGroup.Item>\n                {loadingPay && <Loader />}\n                {!sdkReady ? (\n                  <Loader />\n                ) : (\n                  <PayPalButton\n                    amount={order.totalPrice}\n                    onSuccess={successPaymentHandler}\n                  />\n                )}\n              </ListGroup.Item>\n            )}\n            {loadingSent && <Loader />}\n            {loadingDeliver && <Loader />}\n            {userInfo && userInfo.isAdmin && order.isPaid && !order.isSent && (\n              <ListGroup.Item>\n                <Button\n                  type='button'\n                  className='btn btn-block'\n                  style={{ width: '100%' }}\n                  onClick={sentHandler}\n                >\n                  Mark As Sent\n                </Button>\n              </ListGroup.Item>\n            )}\n            {userInfo &&\n              userInfo.isAdmin &&\n              order.isPaid &&\n              order.isSent &&\n              !order.isDelivered && (\n                <ListGroup.Item>\n                  <Button\n                    type='button'\n                    className='btn btn-block'\n                    style={{ width: '100%' }}\n                    onClick={deliverHandler}\n                  >\n                    Mark As Delivered\n                  </Button>\n                </ListGroup.Item>\n              )}\n          </ListGroup>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default OrderScreen\n","import React, { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Modal, Form } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nconst UserListScreen = () => {\n  const navigate = useNavigate()\n\n  const userList = useSelector((state) => state.userList)\n  const { loading, error, users } = userList\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userDelete = useSelector((state) => state.userDelete)\n  const { success: successDelete } = userDelete\n\n  const dispatch = useDispatch()\n\n  // Modal\n  const handleClose = () => setShowModal(false)\n  const handleShow = () => setShowModal(true)\n  const [showModal, setShowModal] = useState(false)\n  const [confirmName, setConfirmName] = useState('')\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers())\n    } else {\n      navigate('/login')\n    }\n  }, [dispatch, userInfo, navigate, successDelete])\n\n  const deleteHandler = (id, username) => {\n    if (username === confirmName) {\n      dispatch(deleteUser(id))\n      setShowModal(false)\n    }\n  }\n  return (\n    <>\n      <h1>Users</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table\n          striped\n          bordered\n          hover\n          responsive\n          className='table-sm text-center'\n        >\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NAME</th>\n              <th>EMAIL</th>\n              <th>ADMIN</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user) => (\n              <tr key={user._id} className='align-middle'>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\n                </td>\n                <td>\n                  {user.isAdmin ? (\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    <Button variant='light' className='btn-sm'>\n                      <i className='fas fa-edit'></i>\n                    </Button>\n                  </LinkContainer>\n                  <Button\n                    variant='danger'\n                    className='btn-sm'\n                    onClick={handleShow}\n                  >\n                    <i className='fas fa-trash'></i>\n                  </Button>\n\n                  <Form>\n                    <Form.Group className='mb-3' controlId='deleteUser'>\n                      <Modal\n                        show={showModal}\n                        onHide={handleClose}\n                        style={{ top: '10%' }}\n                      >\n                        <Modal.Header className='justify-content-center'>\n                          <Modal.Title>\n                            <i\n                              className='fas fa-exclamation-circle text-warning'\n                              style={{ fontSize: '5rem' }}\n                            ></i>\n                          </Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body className='text-center'>\n                          Are you sure you really want to delete this user?\n                          <div style={{ width: '83%', marginLeft: '38px' }}>\n                            <Form.Label\n                              style={{ textAlign: 'left', marginTop: '0.7rem' }}\n                            >\n                              To delete <strong>{user.name}</strong>, type{' '}\n                              <strong>{user.name}</strong>\n                            </Form.Label>\n                            <Form.Control\n                              type='text'\n                              placeholder={user.name}\n                              onChange={(e) => setConfirmName(e.target.value)}\n                            />\n                            <Form.Text className='text-muted'>\n                              <i className='fas fa-info-circle text-danger'></i>{' '}\n                              This action is not reversible\n                            </Form.Text>\n                          </div>\n                        </Modal.Body>\n                        <Modal.Footer>\n                          <Button variant='secondary' onClick={handleClose}>\n                            Close\n                          </Button>\n                          <Button\n                            variant='danger'\n                            disabled={confirmName !== user.name}\n                            onClick={() => deleteHandler(user._id, user.name)}\n                          >\n                            Delete\n                          </Button>\n                        </Modal.Footer>\n                      </Modal>\n                    </Form.Group>\n                  </Form>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  )\n}\nexport default UserListScreen\n","import React, { useState, useEffect } from 'react'\nimport { useParams, useNavigate, Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nconst UserEditScreen = () => {\n  const { id } = useParams()\n  const navigate = useNavigate()\n\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [isAdmin, setIsAdmin] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userUpdate = useSelector((state) => state.userUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = userUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET })\n      navigate('/admin/userlist')\n    } else {\n      if (!user || !user.name || user._id !== id) {\n        dispatch(getUserDetails(id))\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n        setIsAdmin(user.isAdmin)\n      }\n    }\n  }, [dispatch, navigate, id, user, successUpdate])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(updateUser({ _id: id, name, email, isAdmin }))\n  }\n\n  return (\n    <>\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit User</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name' className='my-3'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email' className='my-3'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='isadmin' className='my-3'>\n              <Form.Check\n                type='checkbox'\n                label='Is Admin'\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default UserEditScreen\n","import React, { useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listOrders } from '../actions/orderActions'\n\nconst OrderListScreen = () => {\n  const navigate = useNavigate()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const orderList = useSelector((state) => state.orderList)\n  const { loading, error, orders } = orderList\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders())\n    } else {\n      navigate('/login')\n    }\n  }, [dispatch, userInfo, navigate])\n\n  return (\n    <>\n      <h1>Orders</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table\n          striped\n          bordered\n          hover\n          responsive\n          className='table-sm text-center'\n        >\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>USER</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>PAID</th>\n              <th>SENT</th>\n              <th>DELIEVERD</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user && order.user.name}</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>${order.totalPrice}</td>\n                <td>\n                  {order.isPaid ? (\n                    order.paidAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  {order.isSent ? (\n                    order.sentAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  {order.deliveredAt ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button variant='light' className='btn-sm'>\n                      DETAILS\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  )\n}\nexport default OrderListScreen\n","import React from 'react'\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport { Container } from 'react-bootstrap'\nimport ProductScreen from './screens/ProductScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Routes>\n            <Route path='/order/:id' element={<OrderScreen />} />\n            <Route path='/placeorder' element={<PlaceOrderScreen />} />\n            <Route path='/payment' element={<PaymentScreen />} />\n            <Route path='/shipping' element={<ShippingScreen />} />\n            <Route path='/login' element={<LoginScreen />} />\n            <Route path='/register' element={<RegisterScreen />} />\n            <Route path='/profile' element={<ProfileScreen />} />\n            <Route path='/product/:id' element={<ProductScreen />} />\n            <Route path='/cart/:id' element={<CartScreen />} />\n            <Route path='/cart' element={<CartScreen />} />\n            <Route path='/cart' element={<CartScreen />} />\n            <Route path='/admin/orderlist' element={<OrderListScreen />} />\n            <Route path='/admin/productlist' element={<ProductListScreen />} />\n            <Route\n              path='/admin/productlist/:pageNumber'\n              element={<ProductListScreen />}\n            />\n            <Route\n              path='/admin/product/:id/edit'\n              element={<ProductEditScreen />}\n            />\n            <Route path='/admin/userlist' element={<UserListScreen />} />\n            <Route path='/admin/user/:id/edit' element={<UserEditScreen />} />\n            <Route path='/search/:keyword' element={<HomeScreen />} />\n            <Route path='/page/:pageNumber' element={<HomeScreen />} />\n            <Route\n              path='/search/:keyword/page/:pageNumber'\n              element={<HomeScreen />}\n            />\n            <Route path='/' element={<HomeScreen />} />\n          </Routes>\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}